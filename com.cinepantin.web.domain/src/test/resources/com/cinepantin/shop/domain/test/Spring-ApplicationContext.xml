<?xml version="1.0" encoding="UTF-8"?>
<beans 
		xmlns="http://www.springframework.org/schema/beans"
		xmlns:util="http://www.springframework.org/schema/util"
		xmlns:jdbc="http://www.springframework.org/schema/jdbc"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
		
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="
				http://www.springframework.org/schema/beans 
				http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				
				http://www.springframework.org/schema/util 
				http://www.springframework.org/schema/util/spring-util-3.0.xsd
				
				http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context-3.0.xsd
				
				http://www.springframework.org/schema/tx 
				http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
">


	<!-- context:spring-configured / -->
	<context:component-scan base-package="com.cinepantin.shop.domain" />
	<context:annotation-config />

	<import resource="Spring-JPA-DataSource.xml" />



	<!--+
		!
		!	Configuration du gestionnaire de persistance
		!
		+-->
	<bean id="entityManagerFactory"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="database" value="MYSQL" />
			</bean>
		</property>
		
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<!--+
					!	hibernate.hbm2ddl.auto :
					!		value="create" to build a new database on each run; 
					!		value="update" to modify an existing database; 
					!		value="create-drop" means the same as "create" but also drops tables when Hibernate closes; 
					!		value="validate" makes no changes to the database 
					+-->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
	      		<prop key="hibernate.connection.charSet">UTF-8</prop>
				<!--  prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JTATransactionFactory</prop -->
				<!-- prop key="hibernate.transaction.manager_lookup_class">org.hibernate.transaction.JBossTransactionManagerLookup</prop -->
			</props>
		</property>
		
		<property name="persistenceXmlLocation" 
				value="com/cinepantin/shop/domain/test/persistence.xml"
		/>
		<property name="persistenceUnitName" value="TestArticlePersistenceUnit" /><!-- dÃ©finie dans persistence.xml -->
		<property name="dataSource" ref="dataSource" /><!-- definie dans Spring-JPA-DataSource.xml -->
		
	</bean>
	

	<!--+
		!
		!	Configuration du gestionnaire de transactions
		!
		+-->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	
	
	
	<!--+
		!
		!	Nos beans (test/main + Services + DAO)
		!
		+-->
	<bean id="testeur" class="com.cinepantin.shop.domain.test.Tester">
		<!-- constructor-arg ref= "BookArticleService"/ -->
	</bean>
	
	<bean id="AnyArticleService" class="com.cinepantin.shop.service.impl.ArticleServiceImpl" scope="prototype">
		<constructor-arg ref="Article" /><!-- passing along the parameterized type of this service instance -->
	</bean>
	
	<bean id="BookService" class="com.cinepantin.shop.service.impl.BookServiceImpl" scope="prototype" />
	
	<!--
	<bean id="BookArticleService" class="com.cinepantin.shop.service.impl.BookServiceImpl" scope="prototype" >
		<qualifier type="org.springframework.beans.factory.annotation.Qualifier">
			<attribute key="" value=""/>
		</qualifier>
		<constructor-arg ref="Book" /><!- - passing along the parameterized type of this service instance - ->
	</bean>
	-->
	
	<bean id="Article" class="com.cinepantin.shop.domain.Article" />
	<!-- 
	<bean id="TxTva" class="com.cinepantin.shop.domain.VatRate" />
	<bean id="PhysicalArticle" class="com.cinepantin.shop.domain.PhysicalArticle" />
	-->
	<bean id="Dvd" class="com.cinepantin.shop.domain.Dvd" />
	<bean id="Book" class="com.cinepantin.shop.domain.Book" />
	
</beans>