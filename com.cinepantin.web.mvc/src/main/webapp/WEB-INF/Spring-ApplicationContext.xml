<?xml version="1.0" encoding="UTF-8"?>
<beans 
		xmlns="http://www.springframework.org/schema/beans"
		xmlns:util="http://www.springframework.org/schema/util"
		xmlns:jdbc="http://www.springframework.org/schema/jdbc"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
		
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="
				http://www.springframework.org/schema/beans 
				http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				
				http://www.springframework.org/schema/util 
				http://www.springframework.org/schema/util/spring-util-3.0.xsd
				
				http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context-3.0.xsd
				
				http://www.springframework.org/schema/tx 
				http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
">

	<!-- context:spring-configured / -->
	
	<!-- Scan for annotation based entities -->
	<context:annotation-config />
	<context:component-scan base-package="com.cinepantin.shop.domain" />
	
	
	
	<!--+
		!
		!	Utility: properties manager
		!	 
		!	(helps with configuration centralization)
		!
		+-->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties" ref="dbProps"/>
	</bean>
	<util:map id="dbProps">
		<entry key="db.driver" value="com.mysql.jdbc.Driver"/>
		<entry key="db.jdbcurl" value="jdbc:mysql://localhost/desEssais"/>
		<entry key="db.username" value="desEssais"/>
		<entry key="db.password" value="desEssais"/>
	</util:map>
	
	
	
	<!--+
		!
		!	mySQL database connection
		!
		+-->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${db.driver}"/>
		<property name="url" value="${db.jdbcurl}"/>
		<property name="username" value="${db.username}"/>
		<property name="password" value="${db.password}"/>
	</bean>
	



	<!--+
		!
		!	Persistence manager configuration
		!
		+-->
	
	<!--+
		!
		!	Get rid of persistence.xml
		!		@see http://stackoverflow.com/questions/1190518/equinox-osgi-and-jpa-hibernate-finding-entities 
		!		@see http://static.springsource.org/spring/docs/3.1.1.RELEASE/javadoc-api/org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean.html
		!
		+-->
	<!-- 
	<bean id="sessionFactory"
    class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
	  <property name="hibernateProperties">
	    <props>
	    </props>
	  </property>
	  <property name="dataSource" ref="dataSource"/>
	  <property name="annotatedClasses">
	    <list>
	      <value>com.cinepantin.shop.domain.Article</value>
	      <value>com.cinepantin.shop.domain.VatRate</value>
	      <value>com.cinepantin.shop.domain.Book</value>
	      <value>com.cinepantin.shop.domain.Dvd</value>
	      
	      <value>com.cinepantin.shop.domain.OrderAddress</value>
	      <value>com.cinepantin.shop.domain.Basket</value>
	      <value>com.cinepantin.shop.domain.UserBasket</value>
	      
	      <value>com.cinepantin.shop.domain.User</value>
	      
	    </list>
	  </property>
	  <property name="packagesToScan">
	    <list>
	      <value>com.cinepantin.shop.domain</value>
	    </list>
	  </property>
	</bean>
	-->
	
	<bean id="entityManagerFactory"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="database" value="MYSQL" />
			</bean>
		</property>
		
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<!--+
					!	hibernate.hbm2ddl.auto :
					!		value="create" to build a new database on each run; 
					!		value="update" to modify an existing database; 
					!		value="create-drop" means the same as "create" but also drops tables when Hibernate closes; 
					!		value="validate" makes no changes to the database 
					+-->
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<prop key="hibernate.show_sql">true</prop>
	      		<prop key="hibernate.connection.charSet">UTF-8</prop>
				<!--  prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JTATransactionFactory</prop -->
				<!-- prop key="hibernate.transaction.manager_lookup_class">org.hibernate.transaction.JBossTransactionManagerLookup</prop -->
			</props>
		</property>
		
		<property name="persistenceXmlLocation" 
				value="META-INF/persistence.xml"
		/>
		<property name="persistenceUnitName" value="CinePantinPersistenceUnit" /><!-- as defined in persistence.xml --> 
		
		<property name="dataSource" ref="dataSource" />
		
	</bean>
	
	
	
	<!--+
		!
		!	Transaction manager configuration
		!
		+-->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	
	
	<!--+
		!
		!	Our very beans (Services + DAO)
		!
		+-->
	
	<bean id="AnyArticleService" class="com.cinepantin.shop.service.impl.ArticleServiceImpl" scope="prototype">
		<constructor-arg ref="Article" /><!-- passing along the parameterized type of this service instance -->
	</bean>
	
	<bean id="BookService" class="com.cinepantin.shop.service.impl.BookServiceImpl" scope="prototype" />
	
	<bean id="Article" class="com.cinepantin.shop.domain.Article" />
	<!-- 
	<bean id="VatRate" class="com.cinepantin.shop.domain.VatRate" />
	<bean id="PhysicalArticle" class="com.cinepantin.shop.domain.PhysicalArticle" />
	-->
	<bean id="Dvd" class="com.cinepantin.shop.domain.Dvd" />
	<bean id="Book" class="com.cinepantin.shop.domain.Book" />
	
	<!-- 
	<bean id="Basket" class="com.cinepantin.shop.domain.Basket" />
	<bean id="UserBasket" class="com.cinepantin.shop.domain.UserBasket" />
	-->
	

	<!--+
		!
		!	Struts (MVC) classes configuration
		!
		+-->
	<!--
	<bean id="articleService" scope="singleton"
		class="com.cinepantin.shop.domain.ArticleService"
	/>
	-->
	<bean id="SpringStrutsArticleAction" scope="prototype"
        class="com.cinepantin.web.mvc.action.ArticleBrowse" >
        <constructor-arg ref="AnyArticleService" />
	</bean>
	
	
	
	<!--+
		!
		!	Apache Tiles (acting as the V in "MVC") configuration
		!
		+-->
	<!-- 
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/layouts/layouts.xml</value>
				<value>/WEB-INF/controllers/hotels/views.xml</value>
			</list>
		</property>
	</bean>
	-->
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="requestContextAttribute" value="requestContext"/>
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
	</bean>
	
</beans>