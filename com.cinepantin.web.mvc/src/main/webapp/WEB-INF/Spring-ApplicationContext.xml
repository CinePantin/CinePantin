<?xml version="1.0" encoding="UTF-8"?>
<beans 
		xmlns="http://www.springframework.org/schema/beans"
		xmlns:util="http://www.springframework.org/schema/util"
		xmlns:jdbc="http://www.springframework.org/schema/jdbc"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
		
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="
				http://www.springframework.org/schema/beans 
				http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				
				http://www.springframework.org/schema/util 
				http://www.springframework.org/schema/util/spring-util-3.0.xsd
				
				http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context-3.0.xsd
				
				http://www.springframework.org/schema/tx 
				http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
">

	<!-- context:spring-configured / -->
	
	<!-- Scan for annotation based entities -->
	<context:component-scan base-package="com.cinepantin.web.domain" />
	<context:annotation-config />

	<!--+
		!
		!	Utilitaire : gestion de propriétés
		!	 
		!	(permet une centralisation de la configuration)
		!
		+-->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="properties" ref="dbProps"/>
	</bean>
	<util:map id="dbProps">
		<entry key="db.driver" value="com.mysql.jdbc.Driver"/>
		<entry key="db.jdbcurl" value="jdbc:mysql://localhost/desEssais"/>
		<entry key="db.username" value="desEssais"/>
		<entry key="db.password" value="desEssais"/>
	</util:map>
	
	<!--+
		!
		!	Connection à la base mySQL
		!
		+-->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${db.driver}"/>
		<property name="url" value="${db.jdbcurl}"/>
		<property name="username" value="${db.username}"/>
		<property name="password" value="${db.password}"/>
	</bean>
	



	<!--+
		!
		!	Configuration du gestionnaire de persistance
		!
		+-->
		
	<!-- <import resource="Spring-JPA-DataSource.xml" />relative path -->
	
	<bean id="entityManagerFactory"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="database" value="MYSQL" />
			</bean>
		</property>
		
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<!--+
					!	hibernate.hbm2ddl.auto :
					!		value="create" to build a new database on each run; 
					!		value="update" to modify an existing database; 
					!		value="create-drop" means the same as "create" but also drops tables when Hibernate closes; 
					!		value="validate" makes no changes to the database 
					+-->
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
				<prop key="hibernate.show_sql">true</prop>
	      		<prop key="hibernate.connection.charSet">UTF-8</prop>
				<!--  prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JTATransactionFactory</prop -->
				<!-- prop key="hibernate.transaction.manager_lookup_class">org.hibernate.transaction.JBossTransactionManagerLookup</prop -->
			</props>
		</property>
		<property name="persistenceXmlLocation" 
				value="META-INF/persistence.xml"
		/>
		<property name="persistenceUnitName" value="TestArticlePersistenceUnit" /><!-- définie dans persistence.xml -->
		<property name="dataSource" ref="dataSource" /><!-- definie dans Spring-JPA-DataSource.xml -->
		
	</bean>
	

	<!--+
		!
		!	Configuration du gestionnaire de transactions
		!
		+-->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	

	<!--+
		!
		!	Configuration des classes Struts (MVC)
		!
		+-->
	<!--
	<bean id="articleService" scope="singleton"
		class="com.cinepantin.web.domain.ArticleService"
	/>
	-->
	<bean id="SpringStrutsArticleAction" scope="prototype"
        class="com.cinepantin.web.mvc.action.ArticleBrowse" >
        <!-- 
        <constructor-arg ref="articleService" />
         -->
	</bean>
	
</beans>